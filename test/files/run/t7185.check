
scala> import scala.tools.reflect.ToolBox
import scala.tools.reflect.ToolBox

scala> import scala.reflect.runtime.universe._
import scala.reflect.runtime.universe._

scala> object O { def apply() = 0 }
object O

scala> val ORef = reify { O }.tree
val ORef: reflect.runtime.universe.Tree = O

scala> val tree = Apply(Block(Nil, Block(Nil, ORef)), Nil)
val tree: reflect.runtime.universe.Apply =
{
  {
    O
  }
}()

scala> {val tb = reflect.runtime.currentMirror.mkToolBox(); tb.typecheck(tree): Any}
val res0: Any =
{
  {
    O.apply()
  }
}

scala> :quit
